<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.saltedfish.mapper.security.ResourcesMapper">
 
 <!-- 根据用户ID查询用户的权限 -->
 <select id="getResourcesByUserId" parameterType="string" resultType="com.saltedfish.entity.security.SysResources" >
    SELECT 
		res.RES_ID id,
		res.RES_NAME name,
		res.RES_PARENT_ID parentId,
		res.RES_KEY  resKey,
		res.RES_URL resUrl,
		res.RES_LEVEL level,
		res.RES_DES  description 
	FROM SYS_USERS  u 
		LEFT JOIN SYS_USERS_ROLES ur ON u.USER_ID = ur.USER_ID
		LEFT JOIN SYS_ROLES  r ON ur.ROLE_ID = r.ROLE_ID
		LEFT JOIN SYS_ROLES_RESOURCES rr ON  rr.ROLE_ID = r.ROLE_ID
		LEFT JOIN SYS_RESOURCES res ON res.RES_ID = rr.RES_ID 
	WHERE u.USER_ID = #{value} 
	</select>
	
	
	<!-- 加载所有的资源 -->
	<select id="loadTreeDataAll" resultType="com.saltedfish.dto.security.ResourceJsonDTO">
		SELECT 
		res.RES_ID id,
		res.RES_NAME name,
		res.RES_PARENT_ID pId,
		res.RES_TYPE type
		FROM SYS_RESOURCES res
	</select>
	
	<!-- 根据角色加载权限 -->
	<select id="loadTreeDataByRoleId"  parameterType="int"  resultType="com.saltedfish.dto.security.ResourceJsonDTO">
		SELECT 
			res.RES_ID id,
			res.RES_NAME name,
			res.RES_PARENT_ID pId,
			res.RES_TYPE type
		FROM SYS_ROLES role 
			LEFT JOIN SYS_ROLES_RESOURCES rr ON role.ROLE_ID = rr.ROLE_ID 
			LEFT JOIN SYS_RESOURCES  res ON res.RES_ID  = rr.RES_ID
		WHERE role.ROLE_ID = #{value}
	</select>
	
	
	<!-- 查询资源列表顺序 -->
	<select id="queryResources" resultType="com.saltedfish.dto.security.ResourceListDTO" parameterType="com.saltedfish.cmd.admin.ResListQueryCmd">
		SELECT 
			res.RES_ID id,
			res.RES_NAME name,
			res.RES_PARENT_ID parentId,
			res.RES_KEY  resKey,
			res.RES_URL resUrl,
			res.RES_TYPE type,
			res.RES_LEVEL level,
			res.RES_DES  description, 
			ress.RES_NAME pName
		FROM SYS_RESOURCES res 
			LEFT JOIN SYS_RESOURCES ress ON res.RES_PARENT_ID  =ress.RES_ID
			WHERE  1=1 
			<if test="resName !=null and resName !=''">
				AND res.RES_NAME like '%${resName}%'
			</if>
			limit #{startPage},#{pageSize}
	</select>
	<!-- 查询资源总数 -->
	<select id="queryResourcesCount"  resultType="int"  parameterType="com.saltedfish.cmd.admin.ResListQueryCmd">
		SELECT 
			COUNT(res.RES_ID)
		FROM SYS_RESOURCES res 
			LEFT JOIN SYS_RESOURCES ress ON res.RES_PARENT_ID  =ress.RES_ID
			WHERE  1=1 
			<if test="resName !=null and resName !=''">
				AND res.RES_NAME like '%${resName}%'
			</if>
	</select>
	
	<!-- 添加资源 -->
	<insert id="addResource" parameterType="com.saltedfish.entity.security.SysResources">
		INSERT INTO SYS_RESOURCES 
			(RES_NAME,RES_PARENT_ID,RES_KEY,RES_TYPE,RES_URL,RES_LEVEL,RES_DES) 	
		VALUES
			(#{name},#{parentId},#{resKey},#{type},#{resUrl},#{level},#{description})			 
	</insert>
	
	
	<!-- 根据父Id 查询子资源 -->
	<select id="queryResourcesByParent" parameterType="int" resultType="com.saltedfish.dto.security.ResourceQueryByParentIdDTO">
		SELECT 
			res.RES_ID resId,
			res.RES_NAME resName,
			res.RES_PARENT_ID parentId
		FROM SYS_RESOURCES res 
			WHERE res.RES_PARENT_ID=#{value}
	</select>
	
	<!-- 删除资源 -->
	<delete id="deleteResourceByResId" parameterType="int" >
		DELETE FROM SYS_RESOURCES WHERE RES_ID=#{value}
	</delete>
	
	<!-- 删除角色资源关联关系根据资源ID -->
	<delete id="deleteRoleResourceRelation" parameterType="int" >
		DELETE FROM SYS_ROLES_RESOURCES WHERE RES_ID=#{value}
	</delete>
	
	<!-- 查询资源修改的页面数据DTO -->
	<select id="queryResourceForUpdate" parameterType="int" resultType="com.saltedfish.dto.security.ResourceUpdateDTO">
		SELECT 
			res.RES_ID resId,
			res.RES_NAME resName,
			res.RES_PARENT_ID resParentId,
			ress.RES_PARENT_ID resParentParentId,
			res.RES_KEY  resKey,
			res.RES_URL resUrl,
			res.RES_TYPE resType,
			res.RES_LEVEL resLevel,
			res.RES_DES  resDes
		FROM SYS_RESOURCES res 
			LEFT JOIN SYS_RESOURCES ress ON res.RES_PARENT_ID  =ress.RES_ID
			WHERE  1=1 AND res.RES_ID=#{value}
	</select>
	
	<update id="updateResource"  parameterType="com.saltedfish.entity.security.SysResources">
		UPDATE 	SYS_RESOURCES SET 
			RES_NAME=#{name},
			RES_PARENT_ID=#{parentId},
			RES_KEY=#{resKey},
			RES_TYPE=#{type},
			RES_URL=#{resUrl},
			RES_LEVEL=#{level},
			RES_DES=#{description}
		WHERE RES_ID=#{id}	
			
	</update>
	
</mapper> 