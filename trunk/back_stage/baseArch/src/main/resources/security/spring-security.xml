<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 登录界面不使用权限过滤 和403页面 -->
	<http security="none" pattern="/login*"/>
	<http security="none" pattern="/403"/>
	<http security="none" pattern="/timeout"/>
	<http security="none" pattern="/login/randomCode"/>
	
	


	<!-- 不要过滤图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />


	<http >
		<http-basic />
		<!-- 定义没有权限访问页面 -->
		<access-denied-handler error-page="/403" />

		<!-- 访问url需要的权限 -->
		<intercept-url pattern="/**" access="ROLE_ADMIN" />
	
		   <!-- 设置登录过滤器 -->
  		<custom-filter before="FORM_LOGIN_FILTER" ref="validateCodeAuthenticationFilter" />
	
		<!-- 表单登陆 -->
		<form-login login-page="/login" default-target-url="/index" always-use-default-target="true" />
			

		<!-- 退出登陆 清除缓存 -->
		<logout logout-url="/loginout" logout-success-url="/login"
			invalidate-session="true"  delete-cookies="JSESSIONID" />

		<!-- 记住我 -->
		<remember-me data-source-ref="dataSource" />
		<!-- <csrf /> -->

		<!-- session管理 过期跳转页面 -->
		<session-management invalid-session-url="/timeout">
			<concurrency-control max-sessions="1" />
		</session-management>
	</http>


	<!-- 定义返回错误信息 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:security/error-mesaage" />
	</beans:bean>




	<!-- 自定义user-service -->
	<beans:bean id="userDetailService" class="com.arch.service.security.UserDetailService"></beans:bean>

	<!-- 自定义权限管理，使用自己的user-service -->
	<authentication-manager erase-credentials="false" alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>

	<!-- CSRF protection. Here we only include the CsrfFilter instead of all 
		of Spring Security. See http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#csrf 
		for more information on Spring Security's CSRF protection -->
	<beans:bean id="csrfFilter"
		class="org.springframework.security.web.csrf.CsrfFilter">
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository" />
		</beans:constructor-arg>
	</beans:bean>
	<!-- Provides automatic CSRF token inclusion when using Spring MVC Form 
		tags or Thymeleaf. -->
	<beans:bean id="requestDataValueProcessor"
		class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor" />
		
		
		<!-- 验证码过滤器 -->
 <beans:bean id="validateCodeAuthenticationFilter" class="com.arch.filter.ValidateCodeUsernamePasswordAuthenticationFilter">
  <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
  <beans:property name="authenticationFailureHandler"  ref="simpleUrlAuthenticationFailureHandler"></beans:property>
  <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
 </beans:bean>
		
		
		 <!-- 登录成功 -->
 <beans:bean id="loginLogAuthenticationSuccessHandler"
  class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
  <beans:property name="defaultTargetUrl" value="/index"></beans:property>
 </beans:bean>


 <!-- 登录失败 -->
 <beans:bean id="simpleUrlAuthenticationFailureHandler"
  class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
  <beans:property name="defaultFailureUrl" value="/login"></beans:property>
 </beans:bean>
  
		
</beans:beans> 